
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: rdsinstanceclasses.database.alibaba.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .specTemplate.providerRef.name
    name: PROVIDER-REF
    type: string
  - JSONPath: .specTemplate.reclaimPolicy
    name: RECLAIM-POLICY
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: database.alibaba.crossplane.io
  names:
    categories:
    - crossplane
    - class
    - alibaba
    kind: RDSInstanceClass
    listKind: RDSInstanceClassList
    plural: rdsinstanceclasses
    singular: rdsinstanceclass
  scope: Cluster
  subresources: {}
  validation:
    openAPIV3Schema:
      description: An RDSInstanceClass is a resource class. It defines the desired
        spec of resource claims that use it to dynamically provision a managed resource.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        specTemplate:
          description: SpecTemplate is a template for the spec of a dynamically provisioned
            RDSInstance.
          properties:
            forProvider:
              description: RDSInstanceParameters define the desired state of an RDS
                instance.
              properties:
                dbInstanceClass:
                  description: DBInstanceClass is the machine class of the instance,
                    e.g. "rds.pg.s1.small"
                  type: string
                dbInstanceStorageInGB:
                  description: DBInstanceStorageInGB indicates the size of the storage
                    in GB. Increments by 5GB. For "rds.pg.s1.small", the range is
                    20-600 (GB). See https://help.aliyun.com/document_detail/26312.html
                  type: integer
                engine:
                  description: Engine is the name of the database engine to be used
                    for this instance. Engine is a required field.
                  type: string
                engineVersion:
                  description: EngineVersion indicates the database engine version.
                    MySQL：5.5/5.6/5.7/8.0 PostgreSQL：9.4/10.0/11.0/12.0
                  type: string
                masterUsername:
                  description: 'MasterUsername is the name for the master user. MySQL
                    Constraints:    * Required for MySQL.    * Must be 1 to 16 letters
                    or numbers.    * First character must be a letter.    * Cannot
                    be a reserved word for the chosen database engine. PostgreSQL
                    Constraints:    * Required for PostgreSQL.    * Must be 1 to 63
                    letters or numbers.    * First character must be a letter.    *
                    Cannot be a reserved word for the chosen database engine.'
                  type: string
                securityIPList:
                  description: SecurityIPList is the IP whitelist for RDS instances
                  type: string
              required:
              - dbInstanceClass
              - dbInstanceStorageInGB
              - engine
              - engineVersion
              - securityIPList
              type: object
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete managed resources that are
                dynamically provisioned using this resource class.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
              required:
              - name
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to managed resources
                dynamically provisioned using this class when their resource claims
                are deleted, and what will happen to their underlying external resource
                when they are deleted. The "Delete" policy causes the managed resource
                to be deleted when its bound resource claim is deleted, and in turn
                causes the external resource to be deleted when its managed resource
                is deleted. The "Retain" policy causes the managed resource to be
                retained, in binding phase "Released", when its resource claim is
                deleted, and in turn causes the external resource to be retained when
                its managed resource is deleted. The "Retain" policy is used when
                no policy is specified, however the "Delete" policy is set at dynamic
                provisioning time if no policy is set.
              enum:
              - Retain
              - Delete
              type: string
            writeConnectionSecretsToNamespace:
              description: WriteConnectionSecretsToNamespace specifies the namespace
                in which the connection secrets of managed resources dynamically provisioned
                using this claim will be created.
              type: string
          required:
          - forProvider
          - providerRef
          - writeConnectionSecretsToNamespace
          type: object
      required:
      - specTemplate
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
